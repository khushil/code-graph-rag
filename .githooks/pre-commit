#!/bin/bash
# Git pre-commit hook to run code quality checks

# Get the root directory of the git repository
ROOT_DIR=$(git rev-parse --show-toplevel)

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "🔍 Running pre-commit checks..."

# Get list of Python files being committed
PYTHON_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.py$' || true)

if [ -z "$PYTHON_FILES" ]; then
    echo "No Python files to check."
    exit 0
fi

# Convert to space-separated list with full paths
PYTHON_FILES_LIST=""
for file in $PYTHON_FILES; do
    PYTHON_FILES_LIST="$PYTHON_FILES_LIST $ROOT_DIR/$file"
done

# Run ruff check on staged files only
echo -n "Running Ruff linting... "
if uv run ruff check $PYTHON_FILES_LIST > /tmp/ruff_output.txt 2>&1; then
    echo -e "${GREEN}✓${NC}"
else
    echo -e "${RED}✗${NC}"
    echo -e "${YELLOW}Ruff found issues:${NC}"
    cat /tmp/ruff_output.txt
    echo ""
    echo "To fix automatically, run: make fix"
    exit 1
fi

# Check formatting
echo -n "Checking code formatting... "
if uv run ruff format --check $PYTHON_FILES_LIST > /tmp/format_output.txt 2>&1; then
    echo -e "${GREEN}✓${NC}"
else
    echo -e "${RED}✗${NC}"
    echo -e "${YELLOW}Formatting issues found:${NC}"
    cat /tmp/format_output.txt
    echo ""
    echo "To fix, run: make format"
    exit 1
fi

# Run mypy on staged files
echo -n "Running type checking... "
if uv run mypy $PYTHON_FILES_LIST > /tmp/mypy_output.txt 2>&1; then
    echo -e "${GREEN}✓${NC}"
else
    # MyPy might fail on partial commits, so we just warn
    echo -e "${YELLOW}⚠${NC}"
    echo -e "${YELLOW}MyPy warnings (non-blocking):${NC}"
    cat /tmp/mypy_output.txt
fi

echo -e "${GREEN}✅ Pre-commit checks passed!${NC}"
exit 0